{"version":3,"sources":["components/Header/Nav.tsx","components/Header/Logo.tsx","components/Header/Header.tsx","components/Writer/ActionBar.tsx","helpers/tweets.ts","components/Writer/FullWriter.tsx","redux/actions/tweet.ts","helpers/gravatar.ts","components/Writer/SimpleWriter.tsx","components/Aside/ShortProfile.tsx","components/Aside/Trend.tsx","components/Aside/FullPrimaryAsideBar.tsx","components/Aside/Suggestion.tsx","components/Aside/FullSecondaryAsideBar.tsx","components/List/ActionBar.tsx","helpers/date.ts","components/List/ListItem.tsx","components/List/ListView.tsx","components/Pages/Home.tsx","components/Pages/MyTweets.tsx","components/Global/App.tsx","serviceWorker.ts","redux/reducers/root.ts","redux/store.ts","index.tsx"],"names":["Nav","react_default","a","createElement","className","NavLink","to","activeClassName","exact","TwitterLogo","Spinner","Logo","_ref","_ref$loading","loading","Logo_Spinner","Logo_TwitterLogo","Header","connect","_ref2","pending","withPending","Header_Nav","Logo_Logo","ActionBar","textSize","_ref$submit","submit","remainingChars","isBelowEnd","isNearTheEnd","isTweetable","classnames","writer-actions-counter--danger","writer-actions-counter--alert","onClick","writer-actions-submit--disabled","tweetsHelper","generateTweet","index","authors","name","email","account","createdAt","Date","getTime","Math","floor","random","author","length","date","image","concat","message","shares","answer","like","retweet","generateTweets","count","tweets","i","push","sort","b","FullWriter","undefined","dispatch","user","type","setTimeout","addTweet","leave","useContext","UserContext","input","useRef","_useState","useState","_useState2","Object","slicedToArray","value","changeValue","doSubmit","trim","useEffect","current","focus","ref","rows","onChange","e","target","onBlur","onKeyDown","event","ctrlKey","keyCode","ActionBar_ActionBar","gravatarHelper","getAvatar","md5","toLowerCase","SimpleWriter","src","alt","placeholder","onFocus","ShortProfile","Link","tweetCount","subscriber","subscription","Trend","FullPrimaryAsideBar","Aside_Trend","withFullPrimaryAsideBar","WrappedComponent","props","FullPrimaryAsideBar_FullPrimaryAsideBar","Suggestion","width","height","FullSecondaryAsideBar","Aside_Suggestion","withFullSecondaryAsideBar","FullSecondaryAsideBar_FullSecondaryAsideBar","active","fa-heart","fa-heart-o","dateHelper","fromNow","thenTimestamp","now","moment","then","diff","duration","_data","year","month","days","format","hours","minutes","seconds","ListItem","tweet","dangerouslySetInnerHTML","__html","List_ActionBar_ActionBar","ListView","map","ListItem_ListItem","key","withTweets","fetch","getState","payload","Home","compose","enhance","writerFold","setWriterFold","toggleWriterDisplay","SimpleWriter_SimpleWriter","ListView_ListView","MyTweets","filteredTweets","filter","initialUser","ceil","createContext","Boolean","window","location","hostname","match","initialState","store","createStore","state","arguments","action","objectSpread","toConsumableArray","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunk","ReactDOM","render","BrowserRouter","basename","es","Provider","Route","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d808601.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => (\n    <nav className=\"main-nav\">\n        <ul>\n            <li>\n                <NavLink to='/' className=\"nav-item\" activeClassName=\"nav-item--active\" exact>\n                    <i className=\"fa fa-home\"/> Accueil\n                </NavLink>\n            </li>\n            <li>\n                <NavLink to='/my-tweets' className=\"nav-item\" activeClassName=\"nav-item--active\" exact>\n                    <i className=\"fa fa-bell-o\"/> Mes tweets\n                </NavLink>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Nav;\n","import React from 'react';\n\nconst TwitterLogo = () => <i className=\"fa fa-twitter fa-fw\"/>;\nconst Spinner = () => <i className=\"fa fa-spinner fa-pulse fa-fw\"/>;\n\ninterface LogoProps {\n    className: string|Object;\n    loading?: boolean;\n}\n\nexport const Logo = ({loading = false}: LogoProps) => (\n    loading ?\n        <Spinner/> :\n        <TwitterLogo/>\n);\n","import React, { useMemo } from 'react';\nimport Nav from './Nav';\nimport { Logo } from './Logo';\nimport './header.scss';\nimport {connect} from 'react-redux';\n\ninterface HeaderViewProps {\n  pending: boolean,\n}\n\nconst HeaderView = ({pending}: HeaderViewProps) => (\n    <header className=\"main-header\">\n        <div className=\"container\">\n            <Nav />\n            <p className=\"logo\">\n                <Logo className=\"logo\" loading={pending} />\n            </p>\n        </div>\n    </header>\n);\n\nconst withPending = connect(\n  ({pending}: any) => ({\n    pending,\n  }),\n);\n\nexport const Header = withPending(HeaderView)\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface ActionBarProps {\n  submit?: () => void;\n  textSize: number;\n}\n\nexport const ActionBar = ({ textSize, submit = () => undefined }: ActionBarProps) => {\n    const MAX_LENGTH = 140,\n        remainingChars = MAX_LENGTH - textSize,\n        isBelowEnd = 0 > remainingChars,\n        isNearTheEnd = !isBelowEnd && 20 >=remainingChars,\n        isTweetable = !isBelowEnd && MAX_LENGTH !== remainingChars;\n\n    return (\n        <p className=\"writer-actions\">\n            <span className=\"writer-actions-controls-block\">\n                <i className=\"fa fa-picture-o fa-border fa-fw\" />\n                <i className=\"fa fa-th-list fa-border fa-fw\" />\n                <i className=\"fa fa-map-marker fa-border fa-fw\" />\n            </span>\n            <span className=\"writer-actions-submit-block\">\n                <span className={classnames(\n                    'writer-actions-counter',\n                    {\n                        'writer-actions-counter--danger': isNearTheEnd,\n                        'writer-actions-counter--alert': isBelowEnd,\n                    }\n                )}>{ remainingChars }</span>\n                <button\n                    onClick={submit}\n                    className={classnames('writer-actions-submit', {'writer-actions-submit--disabled': !isTweetable})}>\n                    Tweeter\n                </button>\n            </span>\n        </p>\n    );\n};\n","import {Tweet} from '../interfaces';\n\nconst tweetsHelper = {\n    generateTweet: (index: number): Tweet => {\n        const authors = [\n            { name: 'Grégory Copin', email: 'gregcop1@gmail.com', account: '@gregcop1' },\n            { name: 'Vincent Chalamon', email: 'vincent@les-tilleuls.coop', account: '@vincentchalamon' },\n            { name: 'Marion Kaamos', email: 'marion@les-tilleuls.coop', account: '@CrimsonKaamos' },\n            { name: 'Baptiste Meÿer', email: 'baptiste@les-tilleuls.coop', account: '@meyer_baptiste' },\n            { name: 'Rodrigue Villetard', email: 'rodrigue@les-tilleuls.coop', account: '@gorghoa' },\n            { name: 'Kevin Dunglas', email: 'kevin@les-tilleuls.coop', account: '@dunglas' },\n        ];\n        const sentences = [\n            'How to #Test JavaScript with Mocha — The Basics.',\n            'How WebKit Built A New Benchmark To Improve JavaScriptCore.',\n            'What is your current favorite CSS in JS lib for #react components and why?',\n            'Survey: Node.js Developers Struggle with Debugging and Downtimes',\n            'What\\'s Coming After ES6: The Future of JavaScript #ES6',\n            'Kyle Simpson\\'s \"Deep Foundations of JS\" Course in London… (We\\'ve got Kyle back in London in four weeks time.)',\n            'It\\'s five years this week since @Angular reached 1.0. 🗓',\n            'Camaro: A High Performance XML to JSON Converter - https://github.com/tuananh/camaro  (Uses bindings to pugixml, a fast C++ XML parser.)',\n            'Larung Gar, the world\\'s largest center of Tibetan Buddhist learning, is one of the most stunning visions on earth',\n            '\"They say exploration is in our DNA, but exploration is what happens when we go against our own biology.\" #NatGeoFest',\n            'Saying you hate a programming language is a sign of developer immaturity. They emerge and develop in contexts you might not be aware of.',\n            'Spend some QT with yourself this weekend -- follow the ‘self’ topic for perspectives on how to live better.',\n            'That\\'s @symfony_live London booked! My first conference! Can\\'t wait! Excited much 🙈😃 #PHP #webdevelopment #symfony @fabpot @symfonyuk',\n            'Call for Papers for #Symfony_Live San Francisco 2017 is open! Submit your talk proposals now #Symfony, #PHP http://bit.ly/2rI3PgX ',\n            '#CFP for #Symfony_Live San Francisco 2017 is open! Submit your talk proposals before June 20th http://sanfrancisco2017.live.symfony.com/ ',\n            '#Symfony_Live Berlin 2017 Webseite ist bereits online, Tickets können gekauft werden - Es gibt 50 Blind Bird Tickets',\n            'Encore un excellent ChtiJS hier soir. Merci à tous d\\'être venu ! Merci @NicoPennec @dunglas @EmmanuelDemey pour les talks.',\n        ];\n        const createdAt = new Date().getTime() - Math.floor(Math.random() * 1000000);\n\n        return {\n            author: authors[Math.floor(Math.random() * authors.length)],\n            date: createdAt,\n            image: 2 === Math.floor(Math.random() * 3) ? `http://lorempixel.com/500/280/technics/${index % 10}` : null,\n            message: sentences[Math.floor(Math.random() * authors.length)],\n            shares: {\n                answer: Math.floor(Math.random() * 20),\n                like: Math.floor(Math.random() * 500),\n                retweet: Math.floor(Math.random() * 50),\n            }\n        };\n    },\n\n    generateTweets: (count: number): Tweet[] => {\n        let tweets: Tweet[] = [];\n\n        for (let i = 0; i < count; i++) {\n            tweets.push(tweetsHelper.generateTweet(i))\n        }\n\n        return tweets.sort((a, b) => {\n            if (a.date < b.date)\n                return 1;\n            if (a.date > b.date)\n                return -1;\n\n            return 0;\n        });\n    }\n};\n\nexport default tweetsHelper;\n","import React, {useContext, useEffect, useRef, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {ActionBar} from './ActionBar';\nimport {addTweet} from '../../redux/actions';\nimport {User} from '../../interfaces';\nimport {UserContext} from '../Global/App';\n\ninterface FullWriterProps {\n  leave: () => void;\n  submit: (u: User, m: string) => any;\n}\n\nconst FullWriterView = ({leave, submit}: FullWriterProps) => {\n  const user:User = useContext(UserContext);\n  const input = useRef(null);\n  const [value, changeValue] = useState('');\n  const doSubmit = () => {\n    if ('' !== value.trim()) {\n      submit(user, value);\n      changeValue('');\n      leave();\n    }\n  };\n  const keyDown = (event: any) => {\n    if (event.ctrlKey && 13 === event.keyCode) {\n      doSubmit();\n    }\n  };\n  const blur = () => '' === value.trim() && leave();\n\n  // focus on mount\n  useEffect(() => {\n    const field: HTMLInputElement = input.current!;\n    field.focus();\n  }, []);\n\n  return (\n    <div className=\"writer-block--unfold\">\n      <textarea\n        ref={input}\n        rows={3}\n        onChange={(e) => changeValue(e.target.value)}\n        onBlur={blur}\n        onKeyDown={keyDown}\n        value={value}/>\n      <ActionBar textSize={value.length} submit={doSubmit}/>\n    </div>\n  );\n};\n\nexport const FullWriter = connect(\n  undefined,\n  (dispatch: any) => ({\n    submit: (user: User, message: string) => dispatch(addTweet(user, message))\n  })\n)(FullWriterView);\n","import {Dispatch} from 'react';\nimport {AnyAction} from 'redux';\nimport tweetsHelper from '../../helpers/tweets';\nimport {User} from '../../interfaces';\n\nexport const ADD_TWEET = 'tweets/add';\nexport const ADD_TWEET_SUCCESS = 'tweets/add_success';\nexport const FETCH_TWEET = 'tweets/fetch';\nexport const FETCH_TWEET_SUCCESS = 'tweets/fetch_success';\n\nexport const addTweet = (author: User, message: string) => (dispatch: Dispatch<AnyAction>) => {\n  dispatch({ type: ADD_TWEET });\n  setTimeout(() => {\n    dispatch({ type: ADD_TWEET_SUCCESS, author, message });\n  }, 1000);\n};\n\nexport const fetchTweets = () => (dispatch: Dispatch<AnyAction>, getState: () => any) => {\n  const {tweets} = getState();\n  dispatch({ type: FETCH_TWEET });\n  setTimeout(() => {\n    dispatch({\n      type: FETCH_TWEET_SUCCESS,\n      payload: (tweets.length ? tweets : tweetsHelper.generateTweets(30))\n    });\n  }, 1000);\n};\n","import md5 from 'md5';\n\nconst gravatarHelper = {\n    getAvatar: (email: string) => {\n        return `https://www.gravatar.com/avatar/${md5(email.trim().toLowerCase())}`;\n    }\n};\n\nexport default gravatarHelper;\n","import React, {useContext} from 'react';\nimport gravatarHelper from '../../helpers/gravatar';\nimport {UserContext} from '../Global/App';\nimport {User} from '../../interfaces';\nimport '../../stylesheets/components/writer-block.scss';\n\ninterface SimpleWriterProps {\n  focus: () => void;\n}\n\nexport const SimpleWriter = ({focus}: SimpleWriterProps) => {\n  const user: User = useContext(UserContext);\n\n  return (\n    <div className=\"writer-block--fold\">\n      <img src={ gravatarHelper.getAvatar(user.email) } alt={user.name} className=\"avatar\" />\n      <input type=\"text\" placeholder=\"Ecrivez votre texte ici...\" onFocus={focus}/>\n      <i className=\"fa fa-picture-o\"/>\n    </div>\n  );\n};\n","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport gravatarHelper from '../../helpers/gravatar';\nimport { UserContext } from \"../Global/App\";\nimport '../../stylesheets/components/short-profile.scss';\n\nexport default () => {\n  const user = useContext(UserContext);\n  return (\n    <div className=\"block short-profile\">\n      <div className=\"profile-infos\">\n        <img src={gravatarHelper.getAvatar(user.email)} alt={user.name} className=\"avatar\"/>\n        <p className=\"profile-metas\">\n          {user.name}\n          <span className=\"profile-account\">{user.account}</span>\n        </p>\n        <div className=\"profile-relation\">\n          <p className=\"col col-30\">\n            Tweets\n            <Link to=\"/my-tweets\">{user.tweetCount}</Link>\n          </p>\n          <p className=\"col col-40\">\n            Abonnements\n            <Link to=\"/my-tweets\">{user.subscriber}</Link>\n          </p>\n          <p className=\"col col-30\">\n            Abonnés\n            <Link to=\"/my-tweets\">{user.subscription}</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport '../../stylesheets/components/trend.scss';\n\nconst Trend = () => (\n    <div className=\"block trend-list\">\n        <h3>Tendances</h3>\n        <ul>\n            <li><button>#NationalSelfieDay</button></li>\n            <li><button>#QueensSpeech</button></li>\n            <li><button>#LaLunaSangreAngItinakda</button></li>\n            <li><button>#FelizMiercoles</button></li>\n            <li><button>#Mersal</button></li>\n            <li><button>La Salada</button></li>\n            <li><button>Pompeyo Márquez</button></li>\n            <li><button>Le Brivido</button></li>\n            <li><button>Machado de Assis</button></li>\n            <li><button>いわきFC</button></li>\n        </ul>\n    </div>\n);\n\nexport default Trend;\n","import React from 'react';\nimport ShortProfile from './ShortProfile';\nimport Trend from './Trend';\n\nconst FullPrimaryAsideBar = () => (\n    <aside className=\"column aside-primary\">\n        <ShortProfile />\n        <Trend/>\n    </aside>\n);\n\nexport const withFullPrimaryAsideBar = (WrappedComponent: any) => (props: any) => (\n    <div className=\"transparent-container\">\n        <FullPrimaryAsideBar/>\n        <WrappedComponent {...props}/>\n    </div>\n);\n\nexport default FullPrimaryAsideBar;\n","import React from 'react';\nimport '../../stylesheets/components/suggestion.scss';\n\nconst Suggestion = () => (\n    <div className=\"block suggestion-list\">\n        <h3>Suggestions</h3>\n        <ul>\n            <li>\n                <img src=\"avatar-machinerie.jpg\" className=\"suggestion-avatar\" width=\"48\" height=\"48\" alt=\"\"/>\n                <div className=\"suggestion-metas\">\n                    <p className=\"suggestion-infos\">\n                        La machinerie\n                        <span className=\"suggestion-account\">@lamachinerie</span>\n                        <button>Suivre</button>\n                    </p>\n                </div>\n            </li>\n            <li>\n                <img src=\"avatar-euratech.jpg\" className=\"suggestion-avatar\" width=\"48\" height=\"48\" alt=\"\"/>\n                <div className=\"suggestion-metas\">\n                    <p className=\"suggestion-infos\">\n                        EuraTechnologie\n                        <span className=\"suggestion-account\">@euratechnologie</span>\n                        <button>Suivre</button>\n                    </p>\n                </div>\n            </li>\n            <li>\n                <img src=\"avatar-typo3.jpg\" className=\"suggestion-avatar\" width=\"48\" height=\"48\" alt=\"\"/>\n                <div className=\"suggestion-metas\">\n                    <p className=\"suggestion-infos\">\n                        TYPO3 France\n                        <span className=\"suggestion-account\">@TYPO3France</span>\n                        <button>Suivre</button>\n                    </p>\n                </div>\n            </li>\n        </ul>\n        <button className=\"suggestion-call-to-action\">Connecter d'autres carnets d'addresses</button>\n    </div>\n);\n\nexport default Suggestion;\n","import React from 'react';\nimport Suggestion from './Suggestion';\n\nconst FullSecondaryAsideBar = () => (\n    <aside className=\"column aside-secondary\">\n        <Suggestion/>\n    </aside>\n);\n\nexport const withFullSecondaryAsideBar = (WrappedComponent: any) => (props: any) => (\n    <div className=\"transparent-container\">\n        <WrappedComponent {...props}/>\n        <FullSecondaryAsideBar/>\n    </div>\n);\n\nexport default FullSecondaryAsideBar;\n","import React from 'react';\nimport classnames from 'classnames';\nimport {Share} from '../../interfaces';\n\nexport const ActionBar = ({ answer, like, retweet }: Share) => (\n    <p className=\"list-item-actions\">\n        <button className={classnames('fa fa-comment-o fa-fw answer', {active: !!answer})} >{ answer }</button>\n        <button className={classnames('fa fa-retweet fa-fw retweet', {active: !!retweet})} >{ retweet }</button>\n        <button className={classnames('fa fa-fw like', {active: !!like, 'fa-heart': !!like, 'fa-heart-o': !like})} >{ like }</button>\n        <button className=\"fa fa-envelope-o fa-fw pm\" />\n    </p>\n);\n","import moment from 'moment';\n\nconst dateHelper = {\n    fromNow: (thenTimestamp: number) => {\n        const now = moment(),\n            then = moment(thenTimestamp),\n            diff = (moment.duration(now.diff(then)) as any)._data;\n\n        if (diff.year || diff.month || diff.days) {\n            return then.format('D MMMM')\n        } else if (diff.hours) {\n            return `${diff.hours} h`;\n        } if (diff.minutes) {\n            return `${diff.minutes} min`;\n        }\n\n        return `${diff.seconds} s`;\n    }\n};\n\nexport default dateHelper;\n","import React from 'react';\nimport gravatarHelper from '../../helpers/gravatar';\nimport dateHelper from '../../helpers/date';\nimport {ActionBar}  from './ActionBar'\nimport {Tweet} from '../../interfaces';\nimport '../../stylesheets/components/list-item.scss';\n\ninterface ListItemProps {\n  tweet: Tweet;\n}\n\nexport const ListItem = ({ tweet }: ListItemProps) => (\n    <div className=\"block list-item\">\n        <img src={ gravatarHelper.getAvatar(tweet.author.email) } alt={tweet.author.name} className=\"avatar\" />\n        <div className=\"list-item-content\">\n            <p className=\"list-item-meta\">\n                <span className=\"list-item-name\">{ tweet.author.name }</span>\n                <span className=\"list-item-account\">{ tweet.author.account }</span>\n                <span className=\"list-item-date\">{ dateHelper.fromNow(tweet.date) }</span>\n            </p>\n            <p className=\"list-item-message\" dangerouslySetInnerHTML={{__html: tweet.message}} />\n            { tweet.image && <img src={tweet.image} className=\"list-item-image\" alt=\"\"/> }\n\n            <ActionBar {...tweet.shares} />\n        </div>\n    </div>\n);\n","import React from 'react';\nimport {ListItem} from './ListItem';\nimport {Tweet} from '../../interfaces';\n\ninterface ListViewProps {\n  tweets: Tweet[];\n}\n\nexport const ListView = ({ tweets }: ListViewProps) => (\n    <div className=\"tweet-list\">\n        {tweets && tweets.map((tweet, index) => (\n            <ListItem key={index} tweet={tweet} />\n        ))}\n    </div>\n);\n","import React, {useEffect, useState} from 'react';\nimport {Action, compose, Dispatch} from 'redux';\nimport {connect} from 'react-redux';\nimport {FullWriter, SimpleWriter} from '../Writer';\nimport {withFullPrimaryAsideBar} from '../Aside/FullPrimaryAsideBar';\nimport {withFullSecondaryAsideBar} from '../Aside/FullSecondaryAsideBar';\nimport {ListView} from '../List';\nimport {Tweet} from '../../interfaces';\nimport {fetchTweets} from '../../redux/actions';\n\ninterface HomeViewProps {\n  fetch: () => void,\n  tweets: Tweet[],\n}\n\nconst HomeView = ({fetch, tweets}: HomeViewProps) => {\n  const [writerFold, setWriterFold] = useState(true);\n  const toggleWriterDisplay = () => setWriterFold(!writerFold);\n\n  useEffect(() => {\n    fetch();\n  }, []);\n\n  return (\n    <div className=\"column main-content\">\n      <div className=\"block writer-block\">\n        {writerFold ?\n          <SimpleWriter focus={toggleWriterDisplay}/> :\n          <FullWriter leave={toggleWriterDisplay}/>\n        }\n      </div>\n      <ListView tweets={tweets}/>\n    </div>\n  );\n};\n\nconst withTweets = connect(\n  ({tweets}: any) => ({\n    tweets\n  }),\n  (dispatch: any) => ({\n    fetch: () => dispatch(fetchTweets())\n  }),\n);\n\nconst enhance: any = compose(\n  withTweets,\n  withFullSecondaryAsideBar,\n  withFullPrimaryAsideBar\n);\n\nexport const Home = enhance(HomeView);\n","import React, {useContext} from 'react';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {withFullPrimaryAsideBar} from '../Aside/FullPrimaryAsideBar';\nimport {withFullSecondaryAsideBar} from '../Aside/FullSecondaryAsideBar';\nimport {ListView} from '../List';\nimport {Tweet, User} from '../../interfaces';\nimport {UserContext} from '../Global/App';\n\ninterface MyTweetsViewProps {\n  tweets: Tweet[],\n}\n\nconst MyTweetsView = ({tweets}: MyTweetsViewProps) => {\n  const user: User = useContext(UserContext);\n  const filteredTweets = tweets.filter(tweet => user.account === tweet.author.account);\n\n  return (\n    <div className=\"column main-content\">\n      <ListView tweets={filteredTweets}/>\n    </div>\n  );\n};\n\nconst withTweets = connect(\n  ({tweets}: any) => ({\n    tweets\n  }),\n);\n\nconst enhance: any = compose(\n  withTweets,\n  withFullSecondaryAsideBar,\n  withFullPrimaryAsideBar\n);\n\nexport const MyTweets = enhance(MyTweetsView);\n","import React, {createContext} from 'react';\nimport {Route} from 'react-router-dom';\nimport {Header} from '../Header';\nimport {Home, MyTweets} from '../Pages';\nimport '../../stylesheets/components/main-layout.scss';\n\nconst initialUser = {\n  name: 'Grégory Copin',\n  email: 'gregcop1@gmail.com',\n  account: '@gregcop1',\n  tweetCount: 500 + Math.ceil(Math.random() * 200),\n  subscriber: Math.ceil(Math.random() * 200),\n  subscription: Math.ceil(Math.random() * 200)\n};\nexport const UserContext = createContext(initialUser);\n\nexport const App = () => (\n  <UserContext.Provider value={initialUser}>\n    <Header/>\n    <div className=\"main-container\">\n      <div className=\"container\">\n        <Route exact path=\"/\" component={Home}/>\n        <Route exact path=\"/my-tweets\" component={MyTweets}/>\n      </div>\n    </div>\n  </UserContext.Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_TWEET, ADD_TWEET_SUCCESS, FETCH_TWEET, FETCH_TWEET_SUCCESS} from '../actions';\nimport {Tweet} from '../../interfaces';\n\ninterface Store {\n  pending: boolean,\n  tweets: Tweet[],\n}\n\nconst initialState: Store = {\n  pending: false,\n  tweets: [],\n};\n\nexport const rootReducer = (state: Store = initialState, action: any) => {\n  switch (action.type) {\n    case ADD_TWEET:\n      return {\n        ...state,\n        pending: true,\n      };\n    case ADD_TWEET_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        tweets: [\n          {\n            author: action.author,\n            date: new Date().getTime(),\n            message: action.message,\n            shares: {\n              answer: 0,\n              like: 0,\n              retweet: 0,\n            }\n          },\n          ...state.tweets\n        ]\n      };\n    case FETCH_TWEET:\n      return {\n        ...state,\n        pending: true,\n      };\n    case FETCH_TWEET_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        tweets: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './reducers/root';\n\ndeclare const window: any;\n\nconst getEnhancer = () => {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n  return composeEnhancers(applyMiddleware(thunk));\n};\n\n// @ts-ignore\nexport const store = createStore(\n  rootReducer,\n  getEnhancer(),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport {App} from './components/Global/App';\nimport * as serviceWorker from './serviceWorker';\nimport './stylesheets/index.scss';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/twitter-react/' : '/'}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}